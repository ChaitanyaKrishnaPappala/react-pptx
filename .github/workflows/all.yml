on: [push]
name: CI
jobs:
  unit-tests:
    name: Tests
    runs-on: ubuntu-16.04
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: '12.x'
      - name: Cache node_modules
        id: cache-modules
        uses: actions/cache@v1
        with:
          path: node_modules
          key: ${{ runner.OS }}-build-${{ hashFiles('yarn.lock') }}
      - name: Install dependencies
        if: steps.cache-modules.outputs.cache-hit != 'true'
        run: yarn install
      - name: Save start timestamp
        id: timestamp-store
        run: echo "::set-output name=start_timestamp::$(($(date +%s%N)/1000000))"
      - name: Run tests
        run: yarn test
      - name: Send elapsed time
        run: curl https://thisgraph.com/api/timings/c35faae6-b3d3-4088-96d0-8c02a0a301b4/basic -X POST -d "$(($(date +%s%N)/1000000-${{ steps.timestamp-store.outputs.start_timestamp }}))"
  lint:
    name: Linting
    runs-on: ubuntu-16.04
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: '12.x'
      - name: Cache node_modules
        id: cache-modules
        uses: actions/cache@v1
        with:
          path: node_modules
          key: ${{ runner.OS }}-build-${{ hashFiles('yarn.lock') }}
      - name: Install dependencies
        if: steps.cache-modules.outputs.cache-hit != 'true'
        run: yarn install
      - name: Run linter
        run: yarn lint
  publish:
    needs: [unit-tests, lint]
    name: Build and Publish
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    steps:
    - uses: actions/checkout@master
    - name: Cache node_modules
      id: cache-modules
      uses: actions/cache@v1
      with:
        path: node_modules
        key: ${{ runner.OS }}-build-${{ hashFiles('yarn.lock') }}
    - uses: actions/setup-node@v1
      with:
        node-version: '12.x'
    - name: Install dependencies
      if: steps.cache-modules.outputs.cache-hit != 'true'
      run: yarn install
    - name: Test
      run: yarn test
    - name: Build
      run: yarn build
    - name: Publish
      if: github.ref == 'refs/heads/master'
      run: npx semantic-release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        NPM_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
